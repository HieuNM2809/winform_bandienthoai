//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CSDL_sellPhone_mainEntities : DbContext
    {
        public CSDL_sellPhone_mainEntities()
            : base("name=CSDL_sellPhone_mainEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATEGORY> CATEGORY { get; set; }
        public virtual DbSet<CLIENT> CLIENT { get; set; }
        public virtual DbSet<COLOR> COLOR { get; set; }
        public virtual DbSet<IMAGES> IMAGES { get; set; }
        public virtual DbSet<INFORMATION_ORDER> INFORMATION_ORDER { get; set; }
        public virtual DbSet<ORDERR> ORDERR { get; set; }
        public virtual DbSet<PRODUCT> PRODUCT { get; set; }
        public virtual DbSet<PROVIDED> PROVIDED { get; set; }
        public virtual DbSet<STAFF> STAFF { get; set; }
        public virtual DbSet<STAFF_LOGIN> STAFF_LOGIN { get; set; }
    
        public virtual int CapNhatTaiKhoan(string user, string pass, string userNew, string passNew)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var userNewParameter = userNew != null ?
                new ObjectParameter("userNew", userNew) :
                new ObjectParameter("userNew", typeof(string));
    
            var passNewParameter = passNew != null ?
                new ObjectParameter("passNew", passNew) :
                new ObjectParameter("passNew", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CapNhatTaiKhoan", userParameter, passParameter, userNewParameter, passNewParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> KiemTraLoginMain(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("KiemTraLoginMain", userParameter, passParameter);
        }
    
        public virtual ObjectResult<LayDanhSachNhanVien_Result> LayDanhSachNhanVien()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LayDanhSachNhanVien_Result>("LayDanhSachNhanVien");
        }
    
        public virtual int ThemNhanVien(string staName, Nullable<System.DateTime> staBirthday, string staAddress, string staPhone, Nullable<bool> staSex, string staDescription, Nullable<int> staStatus, Nullable<decimal> staSalary, string staPosition, Nullable<int> loginID)
        {
            var staNameParameter = staName != null ?
                new ObjectParameter("staName", staName) :
                new ObjectParameter("staName", typeof(string));
    
            var staBirthdayParameter = staBirthday.HasValue ?
                new ObjectParameter("staBirthday", staBirthday) :
                new ObjectParameter("staBirthday", typeof(System.DateTime));
    
            var staAddressParameter = staAddress != null ?
                new ObjectParameter("staAddress", staAddress) :
                new ObjectParameter("staAddress", typeof(string));
    
            var staPhoneParameter = staPhone != null ?
                new ObjectParameter("staPhone", staPhone) :
                new ObjectParameter("staPhone", typeof(string));
    
            var staSexParameter = staSex.HasValue ?
                new ObjectParameter("staSex", staSex) :
                new ObjectParameter("staSex", typeof(bool));
    
            var staDescriptionParameter = staDescription != null ?
                new ObjectParameter("staDescription", staDescription) :
                new ObjectParameter("staDescription", typeof(string));
    
            var staStatusParameter = staStatus.HasValue ?
                new ObjectParameter("staStatus", staStatus) :
                new ObjectParameter("staStatus", typeof(int));
    
            var staSalaryParameter = staSalary.HasValue ?
                new ObjectParameter("staSalary", staSalary) :
                new ObjectParameter("staSalary", typeof(decimal));
    
            var staPositionParameter = staPosition != null ?
                new ObjectParameter("staPosition", staPosition) :
                new ObjectParameter("staPosition", typeof(string));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemNhanVien", staNameParameter, staBirthdayParameter, staAddressParameter, staPhoneParameter, staSexParameter, staDescriptionParameter, staStatusParameter, staSalaryParameter, staPositionParameter, loginIDParameter);
        }
    
        public virtual int ThemNhanVienLogin(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemNhanVienLogin", userParameter, passParameter);
        }
    
        public virtual int ThemNhaCungCap(string fullName, string ten, string diaChi, string maBuuDien, string quocGia, string sodienThoai, string mieuTa, Nullable<int> trangThai)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("diaChi", diaChi) :
                new ObjectParameter("diaChi", typeof(string));
    
            var maBuuDienParameter = maBuuDien != null ?
                new ObjectParameter("maBuuDien", maBuuDien) :
                new ObjectParameter("maBuuDien", typeof(string));
    
            var quocGiaParameter = quocGia != null ?
                new ObjectParameter("quocGia", quocGia) :
                new ObjectParameter("quocGia", typeof(string));
    
            var sodienThoaiParameter = sodienThoai != null ?
                new ObjectParameter("sodienThoai", sodienThoai) :
                new ObjectParameter("sodienThoai", typeof(string));
    
            var mieuTaParameter = mieuTa != null ?
                new ObjectParameter("mieuTa", mieuTa) :
                new ObjectParameter("mieuTa", typeof(string));
    
            var trangThaiParameter = trangThai.HasValue ?
                new ObjectParameter("trangThai", trangThai) :
                new ObjectParameter("trangThai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemNhaCungCap", fullNameParameter, tenParameter, diaChiParameter, maBuuDienParameter, quocGiaParameter, sodienThoaiParameter, mieuTaParameter, trangThaiParameter);
        }
    
        public virtual int ThemSanPham(string prodName, Nullable<decimal> prodPrice, Nullable<int> prodSL, string prodCamera, Nullable<int> prodMenory, Nullable<int> prodReleaseYear, Nullable<int> prodRAM, string prodDescription, Nullable<int> provID, Nullable<int> catID)
        {
            var prodNameParameter = prodName != null ?
                new ObjectParameter("prodName", prodName) :
                new ObjectParameter("prodName", typeof(string));
    
            var prodPriceParameter = prodPrice.HasValue ?
                new ObjectParameter("prodPrice", prodPrice) :
                new ObjectParameter("prodPrice", typeof(decimal));
    
            var prodSLParameter = prodSL.HasValue ?
                new ObjectParameter("prodSL", prodSL) :
                new ObjectParameter("prodSL", typeof(int));
    
            var prodCameraParameter = prodCamera != null ?
                new ObjectParameter("prodCamera", prodCamera) :
                new ObjectParameter("prodCamera", typeof(string));
    
            var prodMenoryParameter = prodMenory.HasValue ?
                new ObjectParameter("prodMenory", prodMenory) :
                new ObjectParameter("prodMenory", typeof(int));
    
            var prodReleaseYearParameter = prodReleaseYear.HasValue ?
                new ObjectParameter("prodReleaseYear", prodReleaseYear) :
                new ObjectParameter("prodReleaseYear", typeof(int));
    
            var prodRAMParameter = prodRAM.HasValue ?
                new ObjectParameter("prodRAM", prodRAM) :
                new ObjectParameter("prodRAM", typeof(int));
    
            var prodDescriptionParameter = prodDescription != null ?
                new ObjectParameter("prodDescription", prodDescription) :
                new ObjectParameter("prodDescription", typeof(string));
    
            var provIDParameter = provID.HasValue ?
                new ObjectParameter("provID", provID) :
                new ObjectParameter("provID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("catID", catID) :
                new ObjectParameter("catID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemSanPham", prodNameParameter, prodPriceParameter, prodSLParameter, prodCameraParameter, prodMenoryParameter, prodReleaseYearParameter, prodRAMParameter, prodDescriptionParameter, provIDParameter, catIDParameter);
        }
    
        public virtual int ThemInfoOrder(Nullable<int> ordID, Nullable<int> prodID, Nullable<int> infoOrderSL, Nullable<decimal> inforOrderPrice)
        {
            var ordIDParameter = ordID.HasValue ?
                new ObjectParameter("ordID", ordID) :
                new ObjectParameter("ordID", typeof(int));
    
            var prodIDParameter = prodID.HasValue ?
                new ObjectParameter("prodID", prodID) :
                new ObjectParameter("prodID", typeof(int));
    
            var infoOrderSLParameter = infoOrderSL.HasValue ?
                new ObjectParameter("infoOrderSL", infoOrderSL) :
                new ObjectParameter("infoOrderSL", typeof(int));
    
            var inforOrderPriceParameter = inforOrderPrice.HasValue ?
                new ObjectParameter("inforOrderPrice", inforOrderPrice) :
                new ObjectParameter("inforOrderPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemInfoOrder", ordIDParameter, prodIDParameter, infoOrderSLParameter, inforOrderPriceParameter);
        }
    
        public virtual int ThemOrder(Nullable<System.DateTime> ordDate, string ordDescription, Nullable<int> staID)
        {
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var ordDescriptionParameter = ordDescription != null ?
                new ObjectParameter("ordDescription", ordDescription) :
                new ObjectParameter("ordDescription", typeof(string));
    
            var staIDParameter = staID.HasValue ?
                new ObjectParameter("staID", staID) :
                new ObjectParameter("staID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemOrder", ordDateParameter, ordDescriptionParameter, staIDParameter);
        }
    
        public virtual int ThemInfoOrderBan(Nullable<int> ordID, Nullable<int> prodID, Nullable<int> infoOrderSL, Nullable<decimal> inforOrderPrice)
        {
            var ordIDParameter = ordID.HasValue ?
                new ObjectParameter("ordID", ordID) :
                new ObjectParameter("ordID", typeof(int));
    
            var prodIDParameter = prodID.HasValue ?
                new ObjectParameter("prodID", prodID) :
                new ObjectParameter("prodID", typeof(int));
    
            var infoOrderSLParameter = infoOrderSL.HasValue ?
                new ObjectParameter("infoOrderSL", infoOrderSL) :
                new ObjectParameter("infoOrderSL", typeof(int));
    
            var inforOrderPriceParameter = inforOrderPrice.HasValue ?
                new ObjectParameter("inforOrderPrice", inforOrderPrice) :
                new ObjectParameter("inforOrderPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemInfoOrderBan", ordIDParameter, prodIDParameter, infoOrderSLParameter, inforOrderPriceParameter);
        }
    
        public virtual int ThemOrderBan(Nullable<System.DateTime> ordDate, string ordDescription, Nullable<int> staID, Nullable<int> cliID)
        {
            var ordDateParameter = ordDate.HasValue ?
                new ObjectParameter("ordDate", ordDate) :
                new ObjectParameter("ordDate", typeof(System.DateTime));
    
            var ordDescriptionParameter = ordDescription != null ?
                new ObjectParameter("ordDescription", ordDescription) :
                new ObjectParameter("ordDescription", typeof(string));
    
            var staIDParameter = staID.HasValue ?
                new ObjectParameter("staID", staID) :
                new ObjectParameter("staID", typeof(int));
    
            var cliIDParameter = cliID.HasValue ?
                new ObjectParameter("cliID", cliID) :
                new ObjectParameter("cliID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemOrderBan", ordDateParameter, ordDescriptionParameter, staIDParameter, cliIDParameter);
        }
    
        public virtual int ThemKhachHang(string cliName, string cliAddress, string cliCountry, string cliPostOfficeCode, string cliPhone)
        {
            var cliNameParameter = cliName != null ?
                new ObjectParameter("cliName", cliName) :
                new ObjectParameter("cliName", typeof(string));
    
            var cliAddressParameter = cliAddress != null ?
                new ObjectParameter("cliAddress", cliAddress) :
                new ObjectParameter("cliAddress", typeof(string));
    
            var cliCountryParameter = cliCountry != null ?
                new ObjectParameter("cliCountry", cliCountry) :
                new ObjectParameter("cliCountry", typeof(string));
    
            var cliPostOfficeCodeParameter = cliPostOfficeCode != null ?
                new ObjectParameter("cliPostOfficeCode", cliPostOfficeCode) :
                new ObjectParameter("cliPostOfficeCode", typeof(string));
    
            var cliPhoneParameter = cliPhone != null ?
                new ObjectParameter("cliPhone", cliPhone) :
                new ObjectParameter("cliPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemKhachHang", cliNameParameter, cliAddressParameter, cliCountryParameter, cliPostOfficeCodeParameter, cliPhoneParameter);
        }
    }
}
